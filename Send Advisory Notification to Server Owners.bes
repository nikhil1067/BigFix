<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Fixlet>
		<Title>Send Advisory Notification to Server Owners</Title>
		<Description><![CDATA[&lt;enter a description of the problem and the corrective action here&gt; ]]></Description>
		<Relevance>true</Relevance>
		<Category></Category>
		<Source>Internal</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2024-12-17</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Tue, 17 Dec 2024 13:31:16 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[action uses wow64 redirection false

parameter "BESClient_Folder" = "{(value "EnterpriseClientFolder" of keys "HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\BigFix\EnterpriseClient" of native registry) as string}"
parameter "BESSite_Folder" = "{(parameter "BESClient_Folder") & "__BESData\CustomSite_BigFix_Application_Control"}"
parameter "Output_Folder" = "{(parameter "BESClient_Folder") & "BigFix Application Control\Archived Data"}"

delete __createfile

createfile until END_OF_FILE

# Input File Path
$InputFile = "{parameter "BESSite_Folder"}\E-Mail_ID_details.csv"

# Read the Input CSV
$CSVData = Import-Csv -Path $InputFile -Header "ComputerName", "ID", "Email" -Delimiter "," 

# Initialize Output Array
$emailIds = @()

# Attachment File
$Attachment = "{parameter "Output_Folder"}\UnapprovedApplicationsList.csv"

# Process Each Computer Name
$ComputerList = Import-Csv -Path $Attachment | Select-Object -Unique -ExpandProperty ComputerName
foreach ($Computer in $ComputerList) {{
    $Match = $CSVData | Where-Object {{ $_.ComputerName -eq $Computer }
    if ($Match) {{
        $emailIds += $Match.Email
    }
}

# Email and SMTP Parameters
$SMTPServer = "10.115.92.21"
$SMTPPort = 25
$From = "bigfixadmin@dryicelabs.com"
$To = $emailIds
$Subject = "Action Required: Unapproved Applications Identified"
$Body = @"
Dear Server Owners,

Please find attached a list of applications that are **not approved** for use in our environment.

- **Action Required**: Remove the applications on your own within 24 hours.  
- **Automatic Removal**: Applications will be removed by **BigFix** automatically after 24 hours if no action is taken.

We advise you to take immediate action to prevent any disruption.

Thank you for your cooperation.

Best regards,  
BigFix Team 
"@

# Send Email with Attachment
try {{
    Send-MailMessage -SmtpServer $SMTPServer -Port $SMTPPort -From $From -To $To -Subject $Subject -Body $Body -Attachments $Attachment -BodyAsHtml:$false
    Write-Output "Email with attachment successfully sent to $To"
}
catch {{
    Write-Error "Failed to send email. Error: $_"
}

END_OF_FILE

delete powershell.ps1
move __createfile powershell.ps1

waithidden "{pathname of file ((it as string) of value "Path" of key "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell" of native registry)}" -ExecutionPolicy Bypass -File "powershell.ps1"]]></ActionScript>
			<SuccessCriteria Option="RunToCompletion"></SuccessCriteria>
		</DefaultAction>
	</Fixlet>
</BES>
